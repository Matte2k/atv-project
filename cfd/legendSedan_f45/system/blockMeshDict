/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2406                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
scale 1;

xmin -10;
xmax  45;
ymin  0;
ymax  4;
zmin  0;
zmax  6;

// === CAR DATA ===
// car length = 3m
// car whidth  = 0.75m
// car height = 1.2m
// farfield   = 5*width, 5*height, 3*front, 12*rear

deltax 0.475; //0.2;	//0.05
deltay 0.475; //0.2;	//0.05
deltaz 0.475; //0.2;	//0.05

lx #calc "($xmax) - ($xmin)";
ly #calc "($ymax) - ($ymin)";
lz #calc "($zmax) - ($zmin)";

xcells #calc "round(($lx)/($deltax))";
ycells #calc "round(($ly)/($deltay))";
zcells #calc "round(($lz)/($deltaz))";

vertices
(
    ($xmin  $ymin  $zmin)
    ($xmax  $ymin  $zmin)
    ($xmax  $ymax  $zmin)
    ($xmin  $ymax  $zmin)
    ($xmin  $ymin  $zmax)
    ($xmax  $ymin  $zmax)
    ($xmax  $ymax  $zmax)
    ($xmin  $ymax  $zmax)
);

blocks
(
    hex (0 1 2 3 4 5 6 7) ($xcells $ycells $zcells) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    inlet
    {
        type wall;
        faces
        (
            (0 4 7 3)
        );
    }

    outlet
    {
        type wall;
        faces
        (
            (2 6 5 1)
        );
    }

    symmetry
    {
        type symmetry; //wall;
        faces
        (
            (0 1 5 4)
        );
    }

    lateralwall
    {
        type wall;
        faces
        (
            (3 7 6 2)
        );
    }

    ground
    {
        type wall;
        faces
        (
            (0 3 2 1)
        );
    }

    top
    {
        type wall;
        faces
        (
            (4 5 6 7)
        );
    }
);

mergePatchPairs 
(
);

// ************************************************************************* //
